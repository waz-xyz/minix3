/* The <stdlib.h> header defines certain common macros, types, and functions.*/

#ifndef _STDLIB_H
#define _STDLIB_H

#ifndef _ANSI_H
#include <ansi.h>
#endif

/* The macros are NULL, EXIT_FAILURE, EXIT_SUCCESS, RAND_MAX, and MB_CUR_MAX.*/
#define NULL    ((void *)0)

#define EXIT_FAILURE       1	/* standard error return using exit() */
#define EXIT_SUCCESS       0	/* successful return using exit() */
#define RAND_MAX       32767	/* largest value generated by rand() */
#define MB_CUR_MAX         1	/* max value of multibyte character in MINIX */

typedef struct { int quot, rem; } div_t;
typedef struct { long quot, rem; } ldiv_t;

/* The types are size_t, wchar_t, div_t, and ldiv_t. */
#ifndef _SIZE_T
#define _SIZE_T
typedef unsigned int size_t;	/* type returned by sizeof */
#endif

#ifndef _WCHAR_T
#define _WCHAR_T
typedef char wchar_t;		/* type expanded character set */
#endif

/* Function Prototypes. */
void abort(void);
int abs(int _j);
int atexit(void (*_func)(void));
double atof(const char *_nptr);
int atoi(const char *_nptr);
long atol(const char *_nptr);
void *calloc(size_t _nmemb, size_t _size);
div_t div(int _numer, int _denom);
void exit(int _status);
void free(void *_ptr);
char *getenv(const char *_name);
long labs(long _j);
ldiv_t ldiv(long _numer, long _denom);
void *malloc(size_t _size);
int mblen(const char *_s, size_t _n);
size_t mbstowcs(wchar_t *_pwcs, const char *_s, size_t _n);
int mbtowc(wchar_t *_pwc, const char *_s, size_t _n);
int rand(void);
void *realloc(void *_ptr, size_t _size);
void srand(unsigned int _seed);
double strtod(const char *_nptr, char **_endptr);
long strtol(const char *_nptr, char **_endptr, int _base);
int system(const char *_string);
size_t wcstombs(char *_s, const wchar_t *_pwcs, size_t _n);
int wctomb(char *_s, wchar_t _wchar);
void *bsearch(const void *_key, const void *_base, 
	size_t _nmemb, size_t _size, 
	int (*compar) (const void *, const void *));
void qsort(void *_base, size_t _nmemb, size_t _size, int (*compar) (const void *, const void *));
unsigned long strtoul(const char *_nptr, char **_endptr, int _base);

#ifdef _POSIX_SOURCE
/* Open Group Base Specifications Issue 6 */
int mkstemp(char *_fmt);
char *initstate(unsigned _seed, char *_state, size_t _size);
long random(void);
char *setstate(const char *state);
void srandom(unsigned seed);
int getloadavg(double *, int);
#endif

#ifdef _MINIX
int putenv(char *_name);
int setenv(const char *name, const char *val, const int f);

/* According to POSIX, getopt should be in unistd.h. What do we do with
 * this?
 */
int getopt(int _argc, char * const _argv[], const char *_opts);
extern char *optarg;
extern int optind, opterr, optopt;
#endif /* _MINIX */

#endif /* STDLIB_H */
